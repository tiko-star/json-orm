<?php
/**
 * This class has been auto-generated by PHP-DI.
 */
class CompiledContainer extends DI\CompiledContainer{
    const METHOD_MAPPING = array (
  'App\\Orm\\Persistence\\JsonDocumentManager' => 'get1',
  'App\\Orm\\EntityManager' => 'get2',
  'App\\Orm\\Repository\\ObjectRepository' => 'get3',
  'Doctrine\\ORM\\EntityManager' => 'get4',
);

    protected function get1()
    {
        $object = new App\Orm\Persistence\JsonDocumentManager('/Users/tiko/Projects/json-orm');
        return $object;
    }

    protected function get2()
    {
        return $this->resolveFactory(static function (\Psr\Container\ContainerInterface $c) {
        return new \App\Orm\EntityManager(
            $c->get(\App\Orm\Persistence\JsonDocumentManager::class),
            $c->get(\App\Orm\Factory\LayoutObjectFactory::class),
        );
    }, 'App\\Orm\\EntityManager');
    }

    protected function get3()
    {
        return $this->resolveFactory(static function (\Psr\Container\ContainerInterface $c) {
        return new \App\Orm\Repository\ObjectRepository(
            $c->get(\App\Orm\Persistence\JsonDocumentManager::class),
            $c->get(\App\Orm\Factory\LayoutObjectFactory::class)
        );
    }, 'App\\Orm\\Repository\\ObjectRepository');
    }

    protected function get4()
    {
        return $this->resolveFactory(static function () {
        $params = [
            'driver'   => 'pdo_mysql',
            'user'     => 'root',
            'password' => 'babelino',
            'dbname'   => 'foo',
        ];

        $paths = ['/Users/tiko/Projects/json-orm'.'/src/Doctrine/Entity'];
        $proxyDir = '/Users/tiko/Projects/json-orm'.'/src/Doctrine/Proxy';

        $config = \Doctrine\ORM\Tools\Setup::createAnnotationMetadataConfiguration($paths, false, $proxyDir, null, false);

        return \Doctrine\ORM\EntityManager::create($params, $config);
    }, 'Doctrine\\ORM\\EntityManager');
    }

}
